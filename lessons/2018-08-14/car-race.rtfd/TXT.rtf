{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 AppleColorEmoji;\f2\fnil\fcharset0 Consolas;
\f3\fnil\fcharset0 Consolas-Italic;}
{\colortbl;\red255\green255\blue255;\red32\green32\blue32;\red245\green245\blue245;\red0\green0\blue0;
\red163\green0\blue3;\red255\green255\blue255;\red88\green209\blue235;\red29\green30\blue26;\red246\green246\blue239;
\red244\green0\blue95;\red152\green224\blue36;\red224\green213\blue97;\red157\green101\blue255;\red77\green77\blue77;
}
{\*\expandedcolortbl;;\cssrgb\c16863\c16863\c16863;\cssrgb\c96863\c96863\c96863;\cssrgb\c0\c0\c0\c80000;
\cssrgb\c70588\c3922\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c40000\c85098\c93725;\cssrgb\c15294\c15686\c13333;\cssrgb\c97255\c97255\c94902;
\cssrgb\c97647\c14902\c44706;\cssrgb\c65098\c88627\c18039;\cssrgb\c90196\c85882\c45490;\cssrgb\c68235\c50588\c100000;\cssrgb\c37647\c37647\c37647;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid101\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl500\sa140\partightenfactor0

\f0\b\fs42 \cf2 \cb3 \expnd0\expndtw0\kerning0
Background & Objectives\
\pard\pardeftab720\sl440\sa240\partightenfactor0

\b0\fs38 \cf4 Let's create a JavaScript game: the Car Race 
\f1 \uc0\u55356 \u57294 
\f0 . It's a simple game where you use your keyboard to make a Wagon move forward. Each player will move their car by tapping a key (e.g.\'a0
\f2\fs28 \cf5 \cb6 Q
\f0\fs38 \cf4 \cb3 \'a0for player one,\'a0
\f2\fs28 \cf5 \cb6 P
\f0\fs38 \cf4 \cb3 \'a0for player two)\
The goal here is to learn more about JavaScript, the DOM, and asynchronous event handling.\
\
\pard\pardeftab720\sl500\sa140\partightenfactor0

\b\fs42 \cf2 Specs\
\pard\pardeftab720\sl440\sa240\partightenfactor0

\b0\fs38 \cf4 Launch your local webserver with:\
\pard\pardeftab720\sl440\partightenfactor0

\f2\fs30\fsmilli15300 \cf7 \cb8 rake \cf9 webpack\
\pard\pardeftab720\sl440\sa240\partightenfactor0

\f0\fs38 \cf4 \cb3 and go to http://localhost:8080\
\pard\pardeftab720\sl480\sa140\partightenfactor0

\b\fs40 \cf2 HTML\
\pard\pardeftab720\sl440\sa240\partightenfactor0

\b0\fs38 \cf4 You will start by building a simple two-player board in HTML. There are a few different ways of doing it, but here's one example:\
\pard\pardeftab720\sl440\partightenfactor0

\f2\fs30\fsmilli15300 \cf10 \cb8 <table\cf9  \cf11 class=\cf12 "racer_table"\cf10 >\cf9 \
  \cf10 <tr\cf9  \cf11 id=\cf12 "player1_race"\cf10 >\cf9 \
    \cf10 <td></td>\cf9 \
    \cf10 <td\cf9  \cf11 class=\cf12 "active"\cf10 ></td>\cf9 \
    \cf10 <td></td>\cf9 \
    \cf10 <td></td>\cf9 \
    etc.\
  \cf10 </tr>\cf9 \
  \cf10 <tr\cf9  \cf11 id=\cf12 "player2_race"\cf10 >\cf9 \
    \cf10 <td></td>\cf9 \
    \cf10 <td></td>\cf9 \
    \cf10 <td></td>\cf9 \
    \cf10 <td\cf9  \cf11 class=\cf12 "active"\cf10 ></td>\cf9 \
    etc.\
  \cf10 </tr>\cf9 \
\cf10 </table>\cf9 \
\pard\pardeftab720\sl480\sa140\partightenfactor0

\f0\b\fs40 \cf2 \cb3 CSS\
\pard\pardeftab720\sl440\sa240\partightenfactor0

\b0\fs38 \cf4 Once your HTML is finished, switch to CSS and design your race track! Example:\
\pard\pardeftab720\sl440\partightenfactor0

\f2\fs30\fsmilli15300 \cf11 \cb8 .racer_table\cf9  \cf10 td\cf9  \{\
  height: \cf13 40px\cf9 ;\
  width: \cf13 40px\cf9 ;\
\}\
\cf11 .racer_table\cf9  \cf10 td\cf11 .active\cf9  \{\
  background-repeat: \cf7 no-repeat\cf9 ;\
  background-size: \cf13 100%\cf9 ;\
\}\
\cf11 #player1_race\cf9  \cf10 td\cf11 .active\cf9  \{\
  background-image: \cf12 url("images/player_1.png")\cf9 ;\
\}\
\cf11 #player2_race\cf9  \cf10 td\cf11 .active\cf9  \{\
  background-image: \cf12 url("images/player_2.png")\cf9 ;\
\}\
\pard\pardeftab720\sl440\sa240\partightenfactor0

\f0\fs38 \cf4 \cb3 You will update a player's position by moving the\'a0
\f2\fs28 \cf5 \cb6 active
\f0\fs38 \cf4 \cb3 \'a0class from one\'a0
\f2\fs28 \cf5 \cb6 td
\f0\fs38 \cf4 \cb3 \'a0to the next one. Of course, there are other solutions to implement this game. Using a table and a CSS class is one option. Just make sure you're able to "manually" produce all the board views you might need.\
It's always a good idea to do as much work as possible using smart HTML markup and CSS classes before jumping into JavaScript. Bad front-end developers spend time writing long javascript code that changes CSS values, instead of short scripts that play nicely with existing CSS classes.\
\pard\pardeftab720\sl480\sa140\partightenfactor0

\b\fs40 \cf2 Javascript\
\pard\pardeftab720\sl440\sa240\partightenfactor0

\b0\fs38 \cf4 Write all your code in\'a0
\f2\fs28 \cf5 \cb6 lib/car  _race.js
\f0\fs38 \cf4 \cb3 . We need a way for JavaScript to update the board state. Create simple JavaScript functions that update a player's position. Again, there are several ways to do the same thing. One example below:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl440\sa120\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Remove the\'a0
\f2\fs28 \cf5 \cb6 active
\f0\fs38 \cf4 \cb3 \'a0class on the current player's\'a0
\f2\fs28 \cf5 \cb6 td
\f0\fs38 \cf4 \cb3 \'a0and add that class to the next\'a0
\f2\fs28 \cf5 \cb6 td
\f0\fs38 \cf4 \cb3 .\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Keep track of the "index" of each player in the table and increase it.\cb1 \
\pard\pardeftab720\sl480\sa140\partightenfactor0

\b\fs40 \cf2 \cb3 Binding to Keyboard\
\pard\pardeftab720\sl440\sa240\partightenfactor0

\b0\fs38 \cf4 Clicking a button is not fast enough. And you can't play with someone else! Have a look at the\'a0
\f2\fs28 \cf5 \cb6 keyup
\f0\fs38 \cf4 \cb3 \'a0event:\
\pard\pardeftab720\sl440\partightenfactor0

\f2\fs30\fsmilli15300 \cf7 \cb8 document\cf9 .\cf11 addEventListener\cf9 (\cf12 "keyup"\cf9 , \cf11 event\cf9  \cf10 =>\cf9  \cf11 console\cf9 .\cf11 log\cf9 (\cf11 event\cf9 ));\
\pard\pardeftab720\sl440\sa240\partightenfactor0

\f0\i\fs38 \cf4 \cb3 Do you understand why we use\'a0
\f3\fs28 \cf5 \cb6 keyup
\f0\fs38 \cf4 \cb3 \'a0and not\'a0
\f3\fs28 \cf5 \cb6 keydown
\f0\fs38 \cf4 \cb3 ?
\i0 \
\pard\pardeftab720\sl360\sa120\partightenfactor0

\fs30 \cf14 Starting and Winning 
\f1 \uc0\u55356 \u57281 
\f0 \
\pard\pardeftab720\sl440\sa240\partightenfactor0

\fs38 \cf4 Two more final things:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl440\sa120\partightenfactor0
\ls2\ilvl0\cf4 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Find a way to announce the winner of the race\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Find a way to restart the game\cb1 \
}